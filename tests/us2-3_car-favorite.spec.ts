import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('http://localhost:3000/');
  await page.getByRole('link', { name: 'Register' }).click();
  await page.getByRole('textbox', { name: 'Full Name' }).click();
  await page.getByRole('textbox', { name: 'Full Name' }).fill('test_favo');
  await page.getByRole('textbox', { name: 'Email Address' }).click();
  await page.getByRole('textbox', { name: 'Email Address' }).fill('test_favo@gmail.com');
  await page.getByRole('textbox', { name: 'Telephone (XXX-XXXXXXX)' }).click();
  await page.getByRole('textbox', { name: 'Telephone (XXX-XXXXXXX)' }).fill('088-8880888');
  await page.getByRole('textbox', { name: 'Password', exact: true }).click();
  await page.getByRole('textbox', { name: 'Password', exact: true }).fill('12345678');
  await page.getByRole('textbox', { name: 'Confirm Password' }).click();
  await page.getByRole('textbox', { name: 'Confirm Password' }).fill('12345678');
  await page.getByRole('button', { name: 'Register' }).click();
  await page.getByRole('link', { name: 'Sign In' }).click();
  await page.getByRole('textbox', { name: 'Email Address' }).click();
  await page.getByRole('textbox', { name: 'Email Address' }).fill('test_favo@gmail.com');
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill('12345678');
  await page.getByRole('button', { name: 'Sign In as User' }).click();
  await page.getByRole('link', { name: 'Catalog' }).click();
  await expect(page.getByText('MBW WIB2025 • _ngixxVerifiedRated by 1 person5.0$2 /day')).toBeVisible();
  await page.locator('.relative > button').first().click();
  await expect(page.getByText('apple er12025 • CEDT Demo1VerifiedRated by 1 person5.0$23 /day')).toBeVisible();
  await page.locator('.grid > div:nth-child(2) > div > button').click();
  await expect(page.getByText('Tesla er12025 • CEDT Demo1VerifiedRated by 1 person5.0$2 /day')).toBeVisible();
  await page.locator('.grid > div:nth-child(3) > div > button').click();
  await page.getByRole('button', { name: 'test_favo' }).click();
  await page.getByRole('link', { name: 'My Profile' }).click();
  await page.locator('.MuiBackdrop-root').click();
  await page.getByRole('link', { name: 'View Favorite Cars See your' }).click();
  await expect(page.getByText('MBW WIB2025 • _ngixxVerified$')).toBeVisible();
  await expect(page.getByText('apple er12025 • CEDT Demo1Verified$23 /day')).toBeVisible();
  await expect(page.getByText('Tesla er12025 • CEDT Demo1Verified$2 /day')).toBeVisible();
  await page.locator('div').filter({ hasText: /^\$2\.00\/daysedanMBW WIB2025 • _ngixxVerified\$2 \/daySedanRedTier 0Reserve Now$/ }).getByLabel('Remove from favorites').nth(1).click();
  await page.getByRole('button', { name: 'Remove from favorites' }).nth(1).click();
  await page.goto('http://localhost:3000/account/favorite');
  await expect(page.getByText('Tesla er12025 • CEDT Demo1Verified$2 /day')).toBeVisible();
  await page.getByRole('button', { name: 'Reserve Now' }).click();
  await page.goto('http://localhost:3000/reserve?carId=6805c463fa4967100b6b4238');
  await expect(page.getByText('Tesla er1convertible | White')).toBeVisible();
  await page.getByRole('button', { name: 'Remove from favorites' }).click();
  await page.goto('http://localhost:3000/account/favorite');
  await expect(page.getByRole('paragraph')).toContainText('You haven\'t added any cars to your favorites yet.');
});